[[query-clause]]
= Clauses

**Read Clauses**

These comprise clauses that read data from the database.

The flow of data within a Cypher query is an unordered sequence of maps with key-value pairs -- a set of possible bindings between the variables in the query and values derived from the database.
This set is refined and augmented by subsequent parts of the query.

[options="header"]
|===
|Clause                                     |   Description
|<<query-match,MATCH>>                      |   Specify the patterns to search for in the database.
|<<query-optional-match,OPTIONAL MATCH>>    |   Specify the patterns to search for in the database while using `nulls` for missing parts of the pattern.
|<<query-where,WHERE>>                      |   Adds constraints to the patterns in a `MATCH` or `OPTIONAL MATCH` clause or filter the results of a `WITH` clause.
|<<query-start,START>>                      |   Find starting points through legacy indexes.
|<<query-aggregation,Aggregation>>    |   Aggregation functions including `count()`, `sum()`, `avg()`, `max()`, `min()`, `collect()` and others. Includes `DISTINCT`.
|<<query-load-csv,LOAD CSV>>                |   Use when importing data from CSV files.
|===

**Write Clauses**

These comprise clauses that write the data to the database.

[options="header"]
|===
|Clause                                     |   Description
|<<query-create,CREATE>>                    |   Create nodes and relationships.
|<<query-merge,MERGE>>                      |   Ensures that a pattern exists in the graph. Either the pattern already exists, or it needs to be created.
|<<query-set,SET>>                          |   Update labels on nodes and properties on nodes and relationships.
|<<query-delete,DELETE>>                    |   Delete graph elements — nodes, relationships or paths.
|<<query-remove,REMOVE>>                    |   Remove properties and labels from nodes and relationships.
|<<query-foreach,FOREACH>>                  |   Update data within a list, whether components of a path, or the result of aggregation.
|<<cypherdoc-importing-csv-files-with-cypher,Importing CSV files with Cypher>> | How to import data from CSV files using `LOAD CSV`.
|<<query-periodic-commit,PERIODIC COMMIT>>  |  How and when to use `PERIODIC COMMIT`
|===

**General Clauses**

These comprise general clauses that work in conjunction with other clauses.

[options="header"]
|===
|Clause                      |   Description
|<<query-return,RETURN>>     | Defines what to include in the query result set.
|<<query-order,ORDER BY>>    | A sub-clause following `RETURN` or `WITH`, specifying that the output should be sorted in particular way.
|<<query-limit,LIMIT>>       | Constrains the number of rows in the output.
|<<query-skip,SKIP>>         | Defines from which row to start including the rows in the output.
|<<query-with,WITH>>         | Allows query parts to be chained together, piping the results from one to be used as starting points or criteria in the next.
|<<query-unwind,UNWIND>>     | Expands a list into a sequence of rows.
|<<query-union,UNION>>       | Combines the result of multiple queries.
|<<query-call,CALL>>         | Invoke a procedure deployed in the database.
|===

//Reading
ifndef::asciidoctor[:leveloffset: 2]

include::ql/query-match.adoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/optional-match/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/where/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/start/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/aggregation/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/load-csv/index.asciidoc[leveloffset=+1]

//Writing
ifndef::asciidoctor[:leveloffset: 2]

include::ql/create/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/merge/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/set/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/delete/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/remove/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/foreach/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::../parsed-graphgists/import/import-csv-with-cypher.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/periodic-commit/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 0]

//General
ifndef::asciidoctor[:leveloffset: 2]

include::ql/return/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/order-by/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/limit/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/skip/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/with/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/unwind/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/union/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 2]

include::ql/call/index.asciidoc[leveloffset=+1]

ifndef::asciidoctor[:leveloffset: 0]
