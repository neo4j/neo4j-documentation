As described in the section on <<administration-security-subgraph, sub-graph security>>, the `GRANT` command allows an administrator to grant a privilege to a role in order to access an entity.
The `DENY` command allows an administrator to deny a privilege to a role in order to prevent access to an entity.
The `REVOKE` command allows an administrator to remove a previously granted or denied privilege.
The syntax is:

.Privilege command syntax
[options="header", width="100%", cols="3a,2"]
|===
| Command | Description

| [source, cypher]
GRANT database-privilege ON DATABASE[S] {* \| dbname} TO role[, ...]
| Grant a privilege to one or multiple roles

| [source, cypher]
DENY database-privilege ON DATABASE[S] {* \| dbname} TO role[, ...]
| Deny a privilege to one or multiple roles

| [source, cypher]
REVOKE GRANT database-privilege ON DATABASE[S] {* \| dbname} FROM role[, ...]
| Revoke a granted privilege from one or multiple roles

| [source, cypher]
REVOKE DENY database-privilege ON DATABASE[S] {* \| dbname} FROM role[, ...]
| Revoke a denied privilege from one or multiple roles

| [source, cypher]
REVOKE database-privilege ON DATABASE[S] {* \| dbname} FROM role[, ...]
| Revoke a granted or denied privilege from one or multiple roles
|===

[NOTE]
These commands are very similar to the <<administration-security-subgraph-introduction, graph-privileges>> except for the use of the term `DATABASE`, no `entity` and and the set of available _database-privileges_ differs from the _graph-privileges_.

Where the components are:

* _database-privilege_
** `ACCESS`
+
allows access for a specific database/graph
+
** `START`
+
allows the specified database to be started
+
** `STOP`
+
allows the specified database to be stopped
+
** `CREATE INDEX`
+
allows indexes to be created on the specified database.
+
** `DROP INDEX`
+
allows indexes to be deleted on the specified database.
+
** `INDEX [MANAGEMENT]`
+
allows indexes to be created and deleted on the specified database.
+
** `CREATE CONSTRAINT`
+
allows constraints to be created on the specified database.
+
** `DROP CONSTRAINT`
+
allows constraints to be deleted on the specified database.
+
** `CONSTRAINT [MANAGEMENT]`
+
allows constraints to be created and deleted on the specified database.
+
** `CREATE NEW [NODE] LABEL`
+
allows labels to be created so that future nodes can be assigned them.
+
** `CREATE NEW [RELATIONSHIP] TYPE`
+
allows relationship types to be created so that future relationships can be created with these types.
+
** `CREATE NEW [PROPERTY] NAME`
+
allows property names to be created so that nodes and relationships can have properties with these names assigned.
+
** `NAME [MANAGEMENT]`
+
allows all of the name management capabilities: node labels, relationship types and property names.
+
** `ALL [[DATABASE] PRIVILEGES]`
+
allows all of the above privileges to be enabled for the specified database.
+
* _dbname_
** The database to associate the privilege with.
   Note that if you delete a database and create a new one with the same name, the new one will NOT have any of the privileges specifically assigned to the deleted database.
** It can be `+*+` which means all databases.
  Any new databases created after this command will also be associated with these privileges.
* _role[, ...]_
** The role or roles to associate the privilege with, comma-separated.


NOTE: It is important to note that using DENY does NOT erase a GRANT command; they both exist.
The only way to erase a privilege is with REVOKE.
