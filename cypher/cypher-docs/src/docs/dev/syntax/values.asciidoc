[[cypher-values]]
= Values and types

Cypher provides first class support for a number of data types.

These fall into several categories which will be described in detail in the following subsections:

* Property types
* Structural types
* Composite types

[[property-types]]
== Property types

* [*] Can be returned from Cypher queries
* [*] Can be used as <<cypher-parameters, parameters>>
* [*] Can be stored as properties
* [*] Can be constructed with <<cypher-expressions, Cypher literals>>

The property types:

* **Number**, an abstract type, which has the subtypes **Integer** and **Float**
* **String**
* **Boolean**
* The spatial type **Point**
* Temporal types: **Date**, **Time**, **LocalTime**, **DateTime**, **LocalDateTime** and **Duration**

The adjective _numeric_, when used in the context of describing  Cypher functions or expressions, indicates that any type of Number applies (Integer or Float).

Homogeneous lists of simple types can also be stored as properties, although lists in general (see <<composite-types, Composite types>>) cannot be stored.

Cypher also provides pass-through support for byte arrays, which can be stored as property values.
Byte arrays are _not_ considered a first class data type by Cypher, so do not have a literal representation.


[[property-types-sip-note]]
.Sorting of special characters
[NOTE]
--
Strings that contain characters that do not belong to the https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane[_Basic Multilingual Plane_] (_BMP_) can have inconsistent or non-deterministic ordering in Neo4j.
BMP is a subset of all characters defined in Unicode.
Expressed simply, it contains all common characters from all common languages.

The most significant characters _not_ in BMP are those belonging to the https://en.wikipedia.org/wiki/Plane_(Unicode)#Supplementary_Multilingual_Plane[_Supplementary Multilingual Plane_] or the https://en.wikipedia.org/wiki/Plane_(Unicode)#Supplementary_Ideographic_Plane[_Supplementary Ideographic Plane_].
Examples are:

* Historic scripts and symbols and notation used within certain fields such as: Egyptian hieroglyphs, modern musical notation, mathematical alphanumerics.
* Emojis and other pictographic sets.
* Game symbols for playing cards, Mah Jongg, and dominoes.
* CJK Ideograph that were not included in earlier character encoding standards. 
--


[[structural-types]]
== Structural types

* [*] Can be returned from Cypher queries
* [ ] Cannot be used as <<cypher-parameters, parameters>>
* [ ] Cannot be stored as properties
* [ ] Cannot be constructed with <<cypher-expressions, Cypher literals>>

The structural types:

* **Node**
** Id
** Label(s)
+
[NOTE]
====
Labels are not values but are a form of pattern syntax.
====
** Map (of properties)
* **Relationship**
** Id
** Type
** Map (of properties)
** Id of the start node
** Id of the end node
* **Path**, an alternating sequence of nodes and relationships


[NOTE]
====
Nodes, relationships, and paths are returned as a result of pattern matching.
In Neo4j, all relationships have a direction.
However, you can have the notion of undirected relationships at query time.
====


[[composite-types]]
== Composite types

* [*] Can be returned from Cypher queries
* [*] Can be used as <<cypher-parameters, parameters>>
* [ ] Cannot be stored as properties
* [*] Can be constructed with <<cypher-expressions, Cypher literals>>

The composite types:

* **List**, a heterogeneous, ordered collection of values, each of which has any property, structural or composite type.
* **Map**, a heterogeneous, unordered collection of (_Key_, _Value_) pairs.
** _Key_ is a String
** _Value_ has any property, structural or composite type

[NOTE]
====
Composite values can also contain `null`.
====

'''

Special care must be taken when using `null` (see <<cypher-working-with-null>>).


